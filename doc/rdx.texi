@node RDX Object File Format
@chapter RDX Object File Format

@node Container Format
@section Container Format

@node File Header
@section File Header

This is present in loose @code{.rdx} files but is not included
directly in implanted save games.

@table @code

@item magic
Magic identifier used for determining if a given file is in the RDX format.

Must be equal to @code{RDX!} in ASCII.

@item version
Format version number. Used for ensuring that the version of the tool used to
generate the file is compatible with the version of the tool used to consume it.

@item payload_ofs
The offset of the beginning of the payload data in the RDX file.

@item payload_size
The size of the payload data in the RDX file.

@item muffin
A string used to determine how the file was generated e.g. the relative file
path of the ELF file used to generate it.

@item serial
The serial number of the build of the game the file targets.

@item entry
The payload entry point address.

@item symbols
A structure containing the values of all the exploit symbols.

@end table

@node Payload Header
@subsection Payload Header

Appears at the beginning of the payload.

@table @code

@item copy_count
The number of copied sections.

@item fill_count
The number of filled sections e.g. @code{.bss}.

@item decompress_count
The number of compressed sections.

@item unused
Unused.

@end table

@node Load Header
@subsection Load Header

Appears in an array immediately following the payload header.

@table @code

@item dest
The destination address to load the section at.

@item source
The source address to load the section from, or the fill value in the case of
fill sections.

@item size
The size in bytes of the final loaded section. Not used for compressed sections.

@end table

@node Sections
@section Sections

@table @code

@item .racdoor.dummy
Dummy section used for symbols relating to a function or global variable from
the game, rather than from the RDX implant itself. This section must have an
address of zero.

@item .racdoor.loader
MIPS code for the loader. This section cannot be compressed.

@item .racdoor.modules
Arrays of function pointers that are to be used to service load, unload and
update events.

@item .racdoor.overlaymap
A mapping from level numbers to overlay indices. This is used by both the loader
and the linker, and hence cannot be compressed.

@item .racdoor.addrtbl
Tables of addresses, used to link against functions and global variables from
the game. The first 4 bytes of the section are used to store the number of
addresses per level.

@item .racdoor.fastdecompress
The addresses of the @code{FastDecompress} function for each level overlay. Used by the
loader, and treated specially by the save game packer.

@item .racdoor.relocs
Relocations to be applied dynamically at runtime i.e. those that are used to
locate objects that exist within the level overlays. These use absolute
addresses instead of being relative to a specific section. Additionally, the
indices provided index into the tables in the @code{.racdoor.addrtbl} section
rather than a traditional symbol table.

@item .racdoor.symbolmap
Maps from symbol names to the runtime indices used for accessing addresses from
the @code{.racdoor.addrtbl} section. Not included at runtime.

@item .racdoor.serial
The product code of the release of the game which the implant is targetting,
stored as a null-terminated ASCII string. For example, @code{SCUS-97199} would 
be used to specify that the implant targets the NTSC release of Ratchet & Clank.

@end table

@node Symbols
@section Symbols

@node Exploit Symbols
@subsection Exploit Symbols

@table @code

@item _racdoor_max_level
The maximum legal value of the @code{Level} variable.

@item _racdoor_help_message
The index of the help message used to trigger the exploit.

@item _racdoor_help_gadget
The index of the gadget help message required for the exploit to be run.

@item _racdoor_help_log
The address of the @code{HelpLog} array.

@item _racdoor_initial_hook
The address of the branch instruction to overwrite in order to provide the
initial hook for the exploit.

@item _racdoor_return_to_game
The absolute address of the original target of the instruction pointed to by @code{_racdoor_initial_hook}.

@item _racdoor_original_instruction
The original value of the instruction pointed to by
@code{_racdoor_initial_hook}.

@item _racdoor_trampoline
The address of the save data block containing the trampoline which the initial
hook points to.

@item _racdoor_trampoline_offset
The offset of the trampoline in the save data block.

@item _racdoor_trampoline_block
The ID number of the save data block containing the trampoline.

@item _racdoor_decryptor
The address of the save game block containing payload decryption code.

@item _racdoor_decryptor_block
The ID number of the save game block containing the payload decryption code.

@item _racdoor_payload
The address of the save game block containing the payload.

@item _racdoor_payload_end
The first address past the end of the save game block containing the payload.

@item _racdoor_payload_block
The ID number of the save game block containing the payload.

@item _racdoor_modload_hook_ofs
The offset of the call in the @code{startlevel} function that we hook to run
the module load functions.

@item _racdoor_modupdate_hook_ofs
The offset of the call in the @code{startlevel} function that we hook to run
the module update functions.

@item _racdoor_modunload_hook_ofs
The offset of the call in the @code{startlevel} function that we hook to run
the module unload functions.

@end table

@node Linker Script Symbols
@subsection Linker Script Symbols

@table @code

@item _racdoor_autohooks, _racdoor_autohooks_end
The array of automatic function hooks.

@item _racdoor_modloadfuncs, _racdoor_modloadfuncs_end
Array of pointers to module load functions.

@item _racdoor_modupdatefuncs, _racdoor_modupdatefuncs_end
Array of pointers to module update functions.

@item _racdoor_modunloadfuncs, _racdoor_modunloadfuncs_end
Array of pointers to module unload functions.

@item _racdoor_overlaymap
Address of the @code{.racdoor.overlaymap} section used for mapping level numbers
to overlay indices.

@item _racdoor_addrtbl
Address of the @code{.racdoor.addrtbl} section used for looking up the addresses
of functions and global variables in the level overlays.

@item _racdoor_fastdecompress
Address of the @code{.racdoor.fastdecompress} section used by the loader to find
the @code{FastDecompress} function.

@item _racdoor_relocs
Runtime relocation table. This is filled in by @code{rdxlink} and only contains
relocations that are needed for linking against the level overlays.

@end table
